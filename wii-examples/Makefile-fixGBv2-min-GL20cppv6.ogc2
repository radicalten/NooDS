.SUFFIXES:
.SECONDARY:
include /opt/devkitpro/libogc2/wii_rules

export DEVKITPRO:= /opt/devkitpro
export DEVKITPPC:= $(DEVKITPRO)/devkitPPC
CC 		:= $(DEVKITPPC)/bin/powerpc-eabi-gcc
CXX 		:= $(DEVKITPPC)/bin/powerpc-eabi-g++

DEBUG   	:= 1
ifeq ($(DEBUG),1)
FLAGS 		+= -O0 -g
else
FLAGS   	+= -O3
endif

MACHDEP = -DGEKKO -mrvl -mcpu=750 -meabi -mhard-float -fsigned-char -ffast-math -funroll-loops -fauto-inc-dec -finline-functions

TARGET 		:= $(notdir $(CURDIR))
SRCDIR		:= opengl20cpp common
C_SOURCES 	:= $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.c))
CPP_SOURCES 	:= $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.cpp))
BINFILES 	:= $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.png))
SOURCES		:= $(C_SOURCES) $(CPP_SOURCES)
BUILD		:= build
DATA		:= $(BINFILES)
INCLUDES 	:= -I$(DEVKITPRO)/libogc2/include -I/opt/devkitpro/portlibs/wii/include -I/opt/devkitpro/portlibs/ppc/include -I../common
OUTPUT		:= $(CURDIR)/$(TARGET)

BIN_OBJECTS := $(addsuffix .o,$(BINFILES))
C_OBJECTS := $(C_SOURCES:.c=.o)
CPP_OBJECTS := $(CPP_SOURCES:.cpp=.o)
OBJECTS := $(C_OBJECTS) $(CPP_OBJECTS) $(BIN_OBJECTS)

FLAGS    += -Wall -Wextra -ffast-math -fpermissive
# FLAGS    += -Werror=implicit-function-declaration
DEFINES  +=

CFLAGS += $(FLAGS) $(DEFINES) $(INCLUDES) 
CXXFLAGS	:=	$(CFLAGS)
LDFLAGS += $(CFLAGS) $(MACHDEP) \
-Wl,-Map,$(notdir $@).map \
-L$(DEVKITPRO)/libogc2/lib/wii \
-L/opt/devkitpro/portlibs/wii/lib \
-L/opt/devkitpro/portlibs/ppc/lib \
-lSDL2main -lSDL2 -lGLU -lglm -lopengx -lpng -lz -laesnd -lwiikeyboard -lfat -lwiiuse -lbte -logc -lm

all: $(OUTPUT).dol 
$(OUTPUT).elf: $(OBJECTS)
	$(CXX) $^ -o $@ $(LDFLAGS)

$(OUTPUT).dol: $(OUTPUT).elf
	$(elf2dol) $< $@

%.o: %.cpp
	$(CXX) -c $< -o $@ $(CXXFLAGS)

%.o: %.c
	$(CXX) -c $< -o $@ $(CFLAGS)

%.png.o: %.png
	$(bin2o)

clean:
	rm -f $(OUTPUT).elf $(OUTPUT).dol $(OUTPUT).map $(OBJECTS) 

.PHONY: clean test
