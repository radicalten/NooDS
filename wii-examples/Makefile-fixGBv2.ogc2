.SUFFIXES:
.SECONDARY:
include /opt/devkitpro/libogc2/wii_rules

export DEVKITPRO 	:= /opt/devkitpro
export DEVKITPPC	:= $(DEVKITPRO)/devkitPPC
CC 			:= $(DEVKITPPC)/bin/powerpc-eabi-gcc

TARGET := Source3-wii
DEBUG   = 1
AUDIO_FLOAT = 0
#CC = powerpc-eabi-gcc
MACHDEP = -DGEKKO -mrvl -mcpu=750 -meabi -mhard-float -fsigned-char -ffast-math -funroll-loops -fauto-inc-dec -finline-functions

SRCDIR = source3
SOURCES = $(wildcard $(SRCDIR)/*.c)
OBJECTS = $(SOURCES:.c=.o)

# OBJECTS :=
# OBJECTS +=main.o

FLAGS    += -Wall -Wextra -ffast-math
FLAGS    += -Werror=implicit-function-declaration
DEFINES  +=
INCLUDES += -I/opt/devkitpro/portlibs/wii/include -I$(DEVKITPRO)/libogc2/include

ifeq ($(AUDIO_FLOAT),1)
FLAGS += -DAUDIO_FLOAT=1
endif

ifeq ($(DEBUG),1)
FLAGS += -O0 -g
else
FLAGS   += -O3
LDFLAGS +=
endif

CFLAGS += $(FLAGS) $(DEFINES) $(INCLUDES) 
LDFLAGS += $(CFLAGS) $(MACHDEP) \
-Wl,-Map,$(notdir $@).map \
-L/opt/devkitpro/portlibs/wii/lib \
-L$(DEVKITPRO)/libogc2/lib/wii \
-lSDL2 -lSDL2main -lGLU -lopengx -lwiiuse -lwiikeyboard -lbte -lfat -laesnd -logc -lm

# -I/opt/devkitpro/portlibs/wii/include \
# -L/opt/devkitpro/portlibs/wii/lib \
# -I$(DEVKITPRO)/libogc2/include
# -L$(DEVKITPRO)/libogc2/lib/wii
# -lSDL2 = libSDL2, -lSDL2main = libSDL2main, -lGLU = -libGLU, -lwiiuse = wii input handling, -lbte = bluetooth -lm = libmath
# -logc = core wii/gcn library, -lglut = libFreeGLUT, -lwiikeyboard = wii keyboard, -lasnd = sound library, -logg = ogg vorbis container
# -lvorbisidec = ogg vorbis decoding, -lopengx = libOpenGX, lansnd = libansnd libogc2 extrems snd lib, -lfat = libfat memory lib
# -ldvm is actually -lfat when installed = libfat with disk volume management and exfat by extrems
# -laesnd = libogc audio engine library used in pcsxr wii and seta-gx 
# as of commit #58 makefile-fixgbv2.ogc2 with libogc2-FixGB.yml this compiles, but sadly I have not configured this file to make .dol yet 
# as of commit #59 it works completely, added -Wl,-Map,$(notdir $@).map to LD flags, declared ELF2DOL := elf2dol which only works with DKP
# Added .dol to all: $(TARGET) then .elf to the $(TARGET) on the line below it. 
# Added the conversion of dol to elf 2 lines with $(TARGET).dol: $(TARGET).elf $(ELF2DOL) $< $@
# %.o %.c line stayed the same, the clean line added .elf to first $(TARGET) added a second and third $(TARGET) with .dol and .map
# Works perfectly on dolphin and even runs at 60 fps -- porting may be possible. next is to try to make the minimal file v3 of this. 

ELF2DOL     := elf2dol

all: $(TARGET).dol
$(TARGET).elf: $(OBJECTS)
	$(CC) $^ -o $@ $(LDFLAGS)

$(TARGET).dol: $(TARGET).elf
	$(ELF2DOL) $< $@

%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS)

clean:
	rm -f $(TARGET).elf $(TARGET).dol $(TARGET).map $(OBJECTS)


.PHONY: clean test
